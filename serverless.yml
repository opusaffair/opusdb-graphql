service: opusdb-graphql
app: opus-graphql
tenant: gtwright
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-warmup
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage,'dev'}
  environment: ${file(secrets.yml):${self:provider.stage}}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource:
      - Fn::Join:
        - ':'
        - - arn:aws:lambda
          - Ref: AWS::Region
          - Ref: AWS::AccountId
          - function:${self:service}-${opt:stage, self:provider.stage}-*
functions:
  graphql:
    warmup: true
    handler: src/index.handler
    events:
      - http:
          path: graphql
          method: post
          credentials: true
          preflightContinue: true
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - apollographql-client-name
              - apollographql-client-version
  playground:
    warmup: false
    handler: src/index.handler
    events:
      - http:
          path: playground
          method: get